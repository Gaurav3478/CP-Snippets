priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;
pq.push({0, 0});
vector<int> dist(n, INT_MAX);
dist[0] = 0;
vector<int> parent(n, -1);
while(!pq.empty()) {
    int node = pq.top().second;
    int wt = pq.top().first;
    pq.pop();
    for(auto x: adj[node]) {
        int adjNode = x.first;
        int edgeWt = x.second;
        if(wt + edgeWt < dist[adjNode]) {
            dist[adjNode] = wt + edgeWt;
            parent[adjNode] = node;
            pq.push({dist[adjNode], adjNode});
        }
    }
}
