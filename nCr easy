vector<ll> fact(1, 1);
vector<ll> inv_fact(1, 1);

const ll MXN = 1e6;

void prep(){ 
    fact.resize(MXN);
    inv_fact.resize(MXN);
    fact[0] = 1;
    for(int i = 1; i < MXN; i++){
        fact[i] = fact[i-1]*i;
    }
    inv_fact[MXN-1] = binpow(fact[MXN-1], MOD-2, MOD);
    for(int i = MXN-2; i >= 0; i--){
        inv_fact[i] = inv_fact[i+1]*(i+1);
    }
}

ll C(ll n, ll k) {
    if (k < 0 || k > n) {
        return 0;
    }
    while ((int) fact.size() < n + 1) {
        fact.push_back(fact.back() * (int) fact.size());
        inv_fact.push_back(1 / fact.back());
    }
    return fact[n] * inv_fact[k] * inv_fact[n - k];
}
